// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_areas
Rcpp::NumericVector rcpp_areas(const Rcpp::List layer);
RcppExport SEXP _clipper_rcpp_areas(SEXP layerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type layer(layerSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_areas(layer));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_path_in_poly
double rcpp_path_in_poly(const Rcpp::List layer, const Rcpp::DataFrame path_in);
RcppExport SEXP _clipper_rcpp_path_in_poly(SEXP layerSEXP, SEXP path_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type layer(layerSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type path_in(path_inSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_path_in_poly(layer, path_in));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_clipper_rcpp_areas", (DL_FUNC) &_clipper_rcpp_areas, 1},
    {"_clipper_rcpp_path_in_poly", (DL_FUNC) &_clipper_rcpp_path_in_poly, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_clipper(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
